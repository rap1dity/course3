CLASSPATH – это переменная окружения, которая сообщает JVM, где искать пользовательские и системные классы.
JAVA_HOME - многие программы используют эту переменную, чтобы определить, где находится Java.

java - это команда, которая используется для запуска Java-приложений.

-cp или -classpath: Позволяет указать путь к директории или JAR-файлам, где находятся библиотеки и классы, необходимые для выполнения программы.
-jar: Позволяет указать JAR-файл, который содержит основной класс приложения. Этот параметр используется, когда вы хотите запустить приложение из JAR-файла.
-version: Выводит информацию о версии установленной JVM.
-X опции: Позволяют настраивать различные параметры виртуальной машины Java, такие как размер кучи, опции сборки мусора и другие.

javac - это команда, используемая для компиляции исходного кода Java в байт-код Java. Вот некоторые основные опции и параметры этой команды:

-classpath или -cp: Позволяет указать путь к директории или JAR-файлам, содержащим классы, которые нужны для компиляции.
-d: Указывает директорию, в которой следует сохранить скомпилированные классы.
-source и -target: Позволяют указать версии исходного кода и целевой версии Java для компиляции.
-version: Выводит информацию о версии компилятора javac.

Папка res (Resources): Содержит ресурсы для пользовательского интерфейса, такие как изображения, макеты и строки, используемые в приложении.
Папка manifests: Содержит файл AndroidManifest.xml, который определяет основные характеристики приложения, такие как его имя, пакет, активности и разрешения.
Папка Gradle Scripts: Содержит скрипты Gradle для управления сборкой, зависимостями и настройками проекта.

Structure (Структура): Отображает структуру вашего проекта, позволяя легко находить и редактировать файлы и ресурсы.
Captures (Снимки): Используется для анализа профилирования приложения и просмотра данных о производительности и потреблении ресурсов.
Favourites (Избранное): Позволяет добавить важные файлы или папки в список избранных для быстрого доступа.
Build Variants (Варианты сборки): Позволяет выбирать различные варианты сборки приложения, такие как отладочная и релизная версии, а также целевую архитектуру.


Terminal (Терминал):
Вкладка "Terminal" предоставляет доступ к командному терминалу непосредственно внутри среды разработки. Вы можете использовать этот терминал для выполнения команд командной строки, установки зависимостей, запуска скриптов и других задач, связанных с разработкой приложения.
Messages (Сообщения)(теперь Build или Build Output):
Вкладка "Messages" отображает информацию о процессе сборки и выполнения вашего проекта. Здесь вы найдете сообщения о возможных ошибках, предупреждениях и другой информации, связанной с сборкой и выполнением кода. Это полезно для отладки и исправления проблем в вашем приложении.
Run (Запуск):
Вкладка "Run" используется для мониторинга процесса выполнения вашего приложения. Здесь отображается вывод консоли приложения, и вы можете видеть, какие действия выполняются, и получать отладочную информацию во время запуска приложения.


Key Store (Хранилище ключей):
Файл с информацией о ключе и сертификате.
Может быть создан или выбран из существующих.
Расширение файла обычно .jks или .keystore.

Alias (Псевдоним ключа):
Имя, которое используется для ссылки на конкретный ключ в хранилище.
Key Password (Пароль ключа):
Пароль для доступа к ключу в хранилище.

Key Alias Password (Пароль для псевдонима ключа):
Пароль для защиты конкретного ключа внутри хранилища.

Validity (Срок действия):
Срок действия создаваемого сертификата ключа (обычно в годах).
Информация о ключе используется для подписи APK и обеспечения безопасности вашего приложения. Убедитесь, что храните ключи в безопасном месте и не делитесь ими с другими.
